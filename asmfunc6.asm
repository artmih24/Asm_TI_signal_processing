
   .global _asmfunc6

N .set 5         	; объявление "макроса", т.е. символу "N" теперь будет соответствовать число "5" - размер массивов "X" и "Y"
C .set 0x40000000  	;  "С" <=> 2.0 (10-сс) = 0x40000000 (HEX, 16-сс)

; см. далее секцию проверки - не работает!
var1: .word 07h ;7
var2: .float 40600000h ;3.5

_asmfunc6:

	; Задача
	; Требуется разработать программу, реализующую на процессоре TMS320C67xx формирование вектора "Y" в соответствии с выражением:
	;  Yi = C · Xi, где у(i) и х(i) — массивы размерности "N", расположенные во внутренней памяти процессора. Индекс "i" изменяется
	;  в диапазоне от 0 до N-1;  C — константа.
	; Результат поместить в регистр B2. Все математические действия должны быть выполнены вычислительными блоками процессора.

	MVK		N, B0 ; регистр B0 содержит значение переменной счетчика цикла, N -> B0

	MVKL 	C, B1 ; запись константы "С" в регистр "B1" (мл. 16-разр.)
	MVKH 	C, B1 ; запись константы "С" в регистр "B1" (ст. 16-разр.)

	MV 		A4, A7 ; в регистре А4 из Си-программы передается адрес массива "Х" (адрес первого элемента); копируем адрес в регистр А7
	MV 		B4, B7 ; в регистре B4 из Си-программы передается адрес массива "Y" (адрес первого элемента); копируем адрес в регистр B7

	; Необязательная секция - проверка некоторых директив (см. SPRU 186) - не работает!
	MVKL var1, A5
	MVKH var1, A5

	MVKL var2, A6
	MVKH var2, A6
	;

_LOOP: ; цикл с постусловием

	; Команда загрузка i-го элемента массива "Х" из памяти в регистр А1. При этом считается, что адрес i-го элемента массива "Х"
	;  находится в регистре А7. За счет использования режима косвенной адресации с постмодификацией адреса (пост-инкремент) после
	;  выполнения команды содержимое регистра инкрементируется и соответствует уже (i+1)-му элементу массива "X", подготавливаясь
	;  к следующей итерации цикла. Чтобы реализоывать заданное выражение, необходимо циклически повторять следующий набор команд:
	LDW 	*A7++[1], A1 	; в адресном регистре А7 базовый адрес памяти, через который будем обращаться к ячейкам массива "X"
	NOP		4 				; команда ожидания окончания выборки i-го элемента массива "X" из памяти.

	; Команда умножения i-го элемента массива "X" на постоянную величину C. Считаем, что константа C предварительно записана в регистр В1.
	MPYSP 	A1, B1, B2
	NOP		3 				; команда ожидания результата умножения

	; Команда записи i-го элемента выходного массива "Y" из регистра В2 в память по адресу, предварительно записанному в регистр В7.
	; После выполнения команды адрес в регистре В7 инкрементируется и указывает на (i+1)-й элемент массива "Y".
	STW 	B2, *B7++[1]
	NOP

	SUB 	B0, 1, B0 ; команда декремента счетчика цикла (регистра В0)
	; ADDK 	-1, B0 ; альтернативный вариант

	; Команда перехода на начало цикла. Переход выполняется по условию: если содержимое регистра В0 не равно 0, команда выполняется,
	;  и цикл повторяется; если равно — команда пропускается.
	[B0] 	B _LOOP
	NOP 	5

	B       B3 ; выход из Asm-подпрограммы и возвращение в основную Си-программу
   	NOP     5

